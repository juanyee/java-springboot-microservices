spring.datasource.url=jdbc:mysql://localhost:3306/order_service?createDatabaseIfNotExist=true

# this configurations are in vault
#spring.datasource.username=root
#spring.datasource.password=root

# this configurations are in github microservices-config-server repo
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#spring.jpa.hibernate.dll-auto=update
#spring.datasource.initialization-mode=always
#spring.jpa.show-sql=true

spring.application.name=order-service
#server.port=8081
server.port=0

eureka.instance.instance-id=${spring.application.name}:${random.uuid}

spring.cloud.config.uri=http://localhost:8888
management.endpoints.web.exposure.include=*

spring.cloud.vault.host=localhost
spring.cloud.vault.port=8200
spring.cloud.vault.scheme=http
spring.cloud.vault.authentication=TOKEN
spring.cloud.vault.token=00000000-0000-0000-0000-000000000000
spring.cloud.vault.application-name=order-service

# rabbitmq is used to refresh the properties using spring-cloud-bus
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

spring.cloud.stream.bindings.notificationEventSupplier-out-0.destination=notification-events
spring.cloud.stream.source=notificationEventSupplier
spring.sleuth.circuitbreaker.enabled=false
spring.sleuth.integration.enabled=true

spring.zipkin.base-url=http://localhost:9411/
spring.sleuth.sampler.probability=1

#spring.cloud.loadbalancer.ribbon.enabled=false
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/auth/realms/microservices-realm
